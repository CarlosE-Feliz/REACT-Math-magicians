{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","calulation","next","total","handleEvent","e","preventDefault","prev","obj","buttonName","target","name","match","includes","parseFloat","id","className","type","value","disabled","onClick","App","props","state","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEe,SAASA,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,IACE,OAAOC,EAAIO,IAAIL,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,GAAkB,MAAdT,EACF,IACE,OAAOC,EAAIS,IAAIP,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,MAAME,MAAM,sBAAD,OAAuBX,EAAvB,M,WC4BEY,MAnDf,SAAoBC,GAClB,IAAQC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,MAAOf,EAAca,EAAdb,UAEfgB,EAAc,SAACC,GACnBA,EAAEC,iBACFL,GAAW,SAACM,GAAD,OCKmBC,EDLCD,ECMd,QADkBE,EDLEJ,EAAEK,OAAOC,MCOvC,CACLR,MAAO,EACPD,KAAM,KACNd,UAAW,MAIFqB,EArBCG,MAAM,UA8BdJ,EAAIpB,UACFoB,EAAIN,KACC,2BAAKM,GAAZ,IAAiBN,KAAMM,EAAIN,KAAOO,IAE7B,2BAAKD,GAAZ,IAAiBN,KAAMO,IAGrBD,EAAIN,KACW,MAAbM,EAAIN,KACC,CACLA,KAAMO,EACNN,MAAO,MAGJ,CACLD,KAAMM,EAAIN,KAAOO,EACjBN,MAAO,MAIJ,CACLD,KAAMO,EACNN,MAAO,MAIQ,MAAfM,EACED,EAAIN,KACFM,EAAIN,KAAKW,SAAS,KACb,eAAKL,GAEP,2BAAKA,GAAZ,IAAiBN,KAAK,GAAD,OAAKM,EAAIN,KAAT,OAEnBM,EAAIpB,UACC,CAAEc,KAAM,MAEbM,EAAIL,MACFK,EAAIL,MAAMU,SAAS,KACd,GAEF,CAAEV,MAAM,GAAD,OAAKK,EAAIL,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfM,EACED,EAAIN,MAAQM,EAAIpB,UACX,CACLe,MAAOlB,EAAQuB,EAAIL,MAAOK,EAAIN,KAAMM,EAAIpB,WACxCc,KAAM,KACNd,UAAW,MAIR,GAGU,QAAfqB,EACED,EAAIN,KACC,2BAAKM,GAAZ,IAAiBN,OAAQ,EAAIY,WAAWN,EAAIN,OAAOT,aAEjDe,EAAIL,MACC,2BAAKK,GAAZ,IAAiBL,QAAS,EAAIW,WAAWN,EAAIL,QAAQV,aAEhD,GAYJe,EAAIN,OAAQM,EAAIL,OAAUK,EAAIpB,UAK/BoB,EAAIpB,UACFoB,EAAIL,QAAUK,EAAIN,KACb,2BAAKM,GAAZ,IAAiBpB,UAAWqB,IAGvB,CACLN,MAAOlB,EAAQuB,EAAIL,MAAOK,EAAIN,KAAMM,EAAIpB,WACxCc,KAAM,KACNd,UAAWqB,GAOVD,EAAIN,KAKF,CACLC,MAAOK,EAAIN,KACXA,KAAM,KACNd,UAAWqB,GAPJ,2BAAKD,GAAZ,IAAiBpB,UAAWqB,IApBrB,2BAAKD,GAAZ,IAAiBpB,UAAWqB,IA/FjB,IAAmBD,EAAKC,MDQrC,OACE,sBAAKM,GAAG,OAAOC,UAAU,OAAzB,UACE,gDACA,sBAAML,KAAK,OAAX,SACE,uBAAOM,KAAK,OAAOF,GAAG,SAASG,OAbrB,IAAVf,GAAwB,OAATD,EACV,EAGK,IAAVC,GAAyB,OAAVA,EACVA,EAEF,KAM8Df,GAAa,KAAOc,GAAQ,IAAKiB,UAAQ,MAE5G,qBAAKJ,GAAG,aAAaC,UAAU,aAA/B,SACE,sBAAKD,GAAG,UAAUC,UAAU,OAA5B,UACE,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,KAAKK,UAAU,UAAhE,gBACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,MAAMK,UAAU,UAAjE,iBACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,OAAIK,UAAU,UAA/D,kBACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,eAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,eACA,wBAAQC,KAAK,SAASG,QAAShB,EAAaO,KAAK,IAAIK,UAAU,UAA/D,wBE9BKK,E,kDAdb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAKnB,WACE,OACE,mCACE,cAAC,EAAD,U,GATUC,aCUHC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.46d52011.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === '*') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    try {\n      return one.mod(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport '../App.css';\nimport calculate from '../logic/calculate';\n\nfunction Calculator(calulation) {\n  const { next, total, operation } = calulation;\n\n  const handleEvent = (e) => {\n    e.preventDefault();\n    calulation((prev) => calculate(prev, e.target.name));\n  };\n\n  const showTotal = () => {\n    if (total === 0 && next === null) {\n      return 0;\n    }\n\n    if (total !== 0 && total !== null) {\n      return total;\n    }\n    return '';\n  };\n  return (\n    <div id=\"main\" className=\"main\">\n      <h3>Math Magicians</h3>\n      <form name=\"form\">\n        <input type=\"text\" id=\"result\" value={(showTotal(calulation)) + (operation || '') + (next || '')} disabled />\n      </form>\n      <div id=\"operations\" className=\"operations\">\n        <div id=\"gridDiv\" className=\"grid\">\n          <button type=\"button\" onClick={handleEvent} name=\"AC\" className=\"calComp\">AC</button>\n          <button type=\"button\" onClick={handleEvent} name=\"+/-\" className=\"calComp\">+/-</button>\n          <button type=\"button\" onClick={handleEvent} name=\"%\" className=\"calComp\">%</button>\n          <button type=\"button\" onClick={handleEvent} name=\"รท\" className=\"opeComp\">รท</button>\n          <button type=\"button\" onClick={handleEvent} name=\"7\" className=\"calComp\">7</button>\n          <button type=\"button\" onClick={handleEvent} name=\"8\" className=\"calComp\">8</button>\n          <button type=\"button\" onClick={handleEvent} name=\"9\" className=\"calComp\">9</button>\n          <button type=\"button\" onClick={handleEvent} name=\"*\" className=\"opeComp\">*</button>\n          <button type=\"button\" onClick={handleEvent} name=\"4\" className=\"calComp\">4</button>\n          <button type=\"button\" onClick={handleEvent} name=\"5\" className=\"calComp\">5</button>\n          <button type=\"button\" onClick={handleEvent} name=\"6\" className=\"calComp\">6</button>\n          <button type=\"button\" onClick={handleEvent} name=\"-\" className=\"opeComp\">-</button>\n          <button type=\"button\" onClick={handleEvent} name=\"1\" className=\"calComp\">1</button>\n          <button type=\"button\" onClick={handleEvent} name=\"2\" className=\"calComp\">2</button>\n          <button type=\"button\" onClick={handleEvent} name=\"3\" className=\"calComp\">3</button>\n          <button type=\"button\" onClick={handleEvent} name=\"+\" className=\"opeComp\">+</button>\n          <button type=\"button\" onClick={handleEvent} name=\"0\" className=\"calComp num0\">0</button>\n          <button type=\"button\" onClick={handleEvent} name=\".\" className=\"calComp\">.</button>\n          <button type=\"button\" onClick={handleEvent} name=\"=\" className=\"opeComp\">=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: 0,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    // if (buttonName === '0' && obj.next === '0') {\n    //   return {\n    //     total: null,\n    //     next: 0,\n    //   };\n    // }\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      if (obj.next === '0') {\n        return {\n          next: buttonName,\n          total: null,\n        };\n      }\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport Calculator from './components/Calculator';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <Calculator />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}